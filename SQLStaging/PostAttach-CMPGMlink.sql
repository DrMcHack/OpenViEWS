-- This is only for Africa.
-- Some manual work is required and done at the end for countries that change borders mid-year or appear mid-year
-- since the general connection used is PGY-CY which is generated by Priogrid yearly and does not contain any monthly dataset

-- For global a better system is needed. Geointersecting CM with PGM should work 
-- BUT it's extremely computationally intensive EVEN WITH caching


DROP TABLE IF EXISTS pgmcm;

CREATE TABLE public.pgmcm AS
with b as
(
    SELECT
      pgm.id as pgm_id,
      pgm.month_id,
      pgm.priogrid_year_id,
      pgy.year_id,
      pgy.country_year_id AS cy_id
    FROM
      staging.priogrid_month AS pgm,
      staging.priogrid_year AS pgy
    WHERE pgm.priogrid_year_id = pgy.id
),
a as
(
    SELECT
      cm.id                                       AS cm_id,
      cm.month_id,
      cm.country_id,
      public.month_id_to_year(cm.month_id :: INT) AS year_id,
      cy.id                                       AS cy_id
    FROM staging.country_month cm, staging.country_year cy
    WHERE
      cm.country_id = cy.country_id AND
      public.month_id_to_year(cm.month_id :: INT) = cy.year_id
)
SELECT
  b.pgm_id,
  a.cm_id
FROM b, a
WHERE a.cy_id=b.cy_id AND a.month_id=b.month_id;

--278646

CREATE INDEX pgmcm_idx ON pgmcm(pgm_id);

UPDATE staging.priogrid_month SET country_month_id=pgmcm.cm_id
FROM pgmcm
WHERE pgmcm.pgm_id=id;

DROP TABLE IF EXISTS pgm_manual_work;
CREATE TABLE pgm_manual_work AS
SELECT DISTINCT priogrid_gid, month_id, month_id_to_year(month_id::int) FROM staging.priogrid_month WHERE country_month_id IS NULL;

DROP TABLE IF EXISTS pgm_manual_work2;
CREATE TABLE pgm_manual_work2 AS
SELECT * FROM staging.priogrid WHERE gid IN (SELECT priogrid_gid FROM pgm_manual_work);

-- Since PG->C is done by Priogrid yearly, we have to do some fixes so that PGM->CM works
-- (as we do not have monthly data supplied by PGM)

-- This is what's affected right now.
--380-384 : Sudan
--373-378 : South Sudan
--157-160 : Ethiopia + ERI
--194-204 : Tanzania
--121-122 : Namibia + ZAF


--Fix Tanzania
with a as
(
    SELECT
      id,
      month_id as mid
    FROM staging.country_month
    WHERE country_id = 242 AND month_id < 205
    ORDER BY month_id
)
UPDATE staging.priogrid_month SET country_month_id=a.id
FROM a
WHERE country_month_id IS NULL and month_id=a.mid AND month_id between 194 AND 204;

--Fix South Sudan before independence (set it as "old Sudan").
with a as
(
    SELECT
      id,
      month_id as mid
    FROM staging.country_month
    WHERE country_id = 59 AND month_id >= 373
    ORDER BY month_id
)
UPDATE staging.priogrid_month SET country_month_id=a.id
FROM a
WHERE country_month_id IS NULL and month_id=a.mid AND month_id between 373 AND 379;

--Fix Rump Sudan after independence (set it as "new Sudan")
with a as
(
    SELECT
      id,
      month_id as mid
    FROM staging.country_month
    WHERE country_id = 245 AND month_id <= 384
    ORDER BY month_id
)
UPDATE staging.priogrid_month SET country_month_id=a.id
FROM a
WHERE country_month_id IS NULL and month_id=a.mid AND month_id between 380 AND 384;


--Fix old Ethiopia in the months before independence (set it as "old Ethiopia")
with a as
(
    SELECT
      id,
      month_id as mid
    FROM staging.country_month
    WHERE country_id = 191 AND month_id > 156
    ORDER BY month_id
)
UPDATE staging.priogrid_month SET country_month_id=a.id
FROM a
WHERE country_month_id IS NULL and month_id=a.mid AND month_id between 157 AND 160;

--Fix old South Africa in the months before independence (set it as "old ZAF")
with a as
(
    SELECT
      id,
      month_id as mid
    FROM staging.country_month
    WHERE country_id = 192 AND month_id > 120
    ORDER BY month_id
)
UPDATE staging.priogrid_month SET country_month_id=a.id
FROM a
WHERE country_month_id IS NULL and month_id=a.mid AND month_id between 121 AND 122;

--And we're done, so clean up

DROP TABLE IF EXISTS pgmcm;
DROP TABLE IF EXISTS pgm_manual_work;
DROP TABLE IF EXISTS pgm_manual_work2;
DROP TABLE IF EXISTS pgmxm;
DROP TABLE IF EXISTS pgmxm2;

